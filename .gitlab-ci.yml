variables:
  DOCKER_DRIVER: overlay2

  BUILD_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"

include:
  template: SAST.gitlab-ci.yml

sast:
  variables:
    CI_DEBUG_TRACE: "true"

stages:
  - build
  - test
  - release

build:
  image: docker:stable
  services:
    - docker:stable-dind
  stage: build
  script:
    - docker login ${CI_REGISTRY} -u ${GITLAB_USER_LOGIN} -p ${ACCESS_TOKEN}
    - docker build --tag "$BUILD_IMAGE_NAME" .
    - docker push "$BUILD_IMAGE_NAME"

.test-job: &test-job
  stage: test
  image: "$BUILD_IMAGE_NAME"
  before_script:
    - apt-get update
    - apt-get install -y jq
    - mkdir data
    - echo ${Dummy_config} | jq . > data/config.json
    - pip install pipenv
    - pipenv install

test:pylint:
  <<: *test-job
  script:
    - pipenv run pylint congregate | tee pylint.txt || pylint-exit $?
    - score=$(sed -n 's/^Your code has been rated at \([-0-9.]*\)\/.*/\1/p' pylint.txt)
    - echo "Pylint score was $score"
    - json_badge_info=$(curl -H "PRIVATE-TOKEN:$ACCESS_TOKEN" -X GET https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/badges)
    - [[ $json_badge_info =~ \"id\":([0-9]*) ]]
    - pylint_badge_id=${BASH_REMATCH[1]}
    - echo $pylint_badge_id
    - badge_url=https://img.shields.io/badge/lint%20score-$score-blue.svg
    - >-
      curl https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/badges/$pylint_badge_id
      -X PUT
      -H "PRIVATE-TOKEN: $ACCESS_TOKEN"
      -H "Content-Type: application/json"
      -d '{"image_url": "'"$badge_url"'"}'
  artifacts:
    paths:
      - pylint.txt

test:unit:
  <<: *test-job
  script:
    - pipenv run pytest -m 'not e2e' --cov-config=.coveragerc --cov=congregate congregate/tests/

test:end-to-end:
  services:
    - name: gitlab/gitlab-ce:latest
      alias: gitlab1
    - name: gitlab/gitlab-ce:latest
      alias: gitlab2
  <<: *test-job
  tags:
    - docker
  script:
    - GITLAB_SRC=gitlab1 GITLAB_DEST=gitlab2 pipenv run pytest -m e2e congregate/tests/

release-tag:
  stage: release
  image: docker:stable
  variables:
    RELEASE_IMAGE_NAME: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  services:
    - docker:stable-dind
  before_script:
    - docker login -u "$GITLAB_USER_LOGIN" -p "$ACCESS_TOKEN" "$CI_REGISTRY"
  script:
    - docker pull "$BUILD_IMAGE_NAME"
    - docker tag "$BUILD_IMAGE_NAME" "$RELEASE_IMAGE_NAME"
    - docker push "$RELEASE_IMAGE_NAME"
  only:
    - tags
