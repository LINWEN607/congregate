variables:
  DOCKER_DRIVER: overlay2

  BUILD_IMAGE_NAME: "$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA"

include:
  template: SAST.gitlab-ci.yml

sast:
  variables:
    CI_DEBUG_TRACE: "true"

stages:
  - build
  - test
  - release

build:
  image: docker:stable
  services:
    - docker:stable-dind
  stage: build
  script:
    - docker login ${CI_REGISTRY} -u ${GITLAB_USER_LOGIN} -p ${ACCESS_TOKEN}
    - docker build --tag "$BUILD_IMAGE_NAME" .
    - docker push "$BUILD_IMAGE_NAME"

# pre-test:
#   stage: pre-test
#   image: "$BUILD_IMAGE_NAME"
#   script:
#     - apt-get update
#     - pip install pipenv
#     - export PIPENV_VENV_IN_PROJECT=true
#     - pipenv install
#   cache:
#     paths: 
#       - .venv/

.test-job: &test-job
  stage: test
  image: "$BUILD_IMAGE_NAME"
  before_script:
    - apt-get update
    - apt-get install -y jq curl
    - mkdir data
    - echo ${Dummy_config} | jq . > $CONGREGATE_PATH/data/config.json
    - pip install pipenv
    - export PIPENV_VENV_IN_PROJECT=true
    - pipenv install
  
test:unit:
  <<: *test-job
  script:
    - pipenv run pytest -m 'not e2e' --cov-config=.coveragerc --cov=congregate congregate/tests/

test:end-to-end:
  services:
    - name: docker:stable-dind
    - name: gitlab/gitlab-ee:latest
      alias: gitlab_source
    - name: gitlab/gitlab-ee:latest
      alias: gitlab_destination
  <<: *test-job
  tags:
    - e2e
  script:
    - export GITLAB_SRC=http://gitlab_source 
    - export GITLAB_DEST=http://gitlab_destination 
    - pipenv run pytest -s -m e2e congregate/tests/

release-tag:
  stage: release
  image: docker:stable
  variables:
    RELEASE_IMAGE_NAME: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME"
  services:
    - docker:stable-dind
  before_script:
    - docker login -u "$GITLAB_USER_LOGIN" -p "$ACCESS_TOKEN" "$CI_REGISTRY"
  script:
    - docker pull "$BUILD_IMAGE_NAME"
    - docker tag "$BUILD_IMAGE_NAME" "$RELEASE_IMAGE_NAME"
    - docker push "$RELEASE_IMAGE_NAME"
  only:
    - tags
