class MockOrgsApi():
    def get_all_orgs(self):
        return [
            {
                "login": "org1",
                "id": 8,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjg=",
                "url": "https://github.example.net/api/v3/orgs/org1",
                "repos_url": "https://github.example.net/api/v3/orgs/org1/repos",
                "events_url": "https://github.example.net/api/v3/orgs/org1/events",
                "hooks_url": "https://github.example.net/api/v3/orgs/org1/hooks",
                "issues_url": "https://github.example.net/api/v3/orgs/org1/issues",
                "members_url": "https://github.example.net/api/v3/orgs/org1/members{/member}",
                "public_members_url": "https://github.example.net/api/v3/orgs/org1/public_members{/member}",
                "avatar_url": "https://github.example.net/avatars/u/8?",
                "description": None
            },
            {
                "login": "org2",
                "id": 9,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjk=",
                "url": "https://github.example.net/api/v3/orgs/org2",
                "repos_url": "https://github.example.net/api/v3/orgs/org2/repos",
                "events_url": "https://github.example.net/api/v3/orgs/org2/events",
                "hooks_url": "https://github.example.net/api/v3/orgs/org2/hooks",
                "issues_url": "https://github.example.net/api/v3/orgs/org2/issues",
                "members_url": "https://github.example.net/api/v3/orgs/org2/members{/member}",
                "public_members_url": "https://github.example.net/api/v3/orgs/org2/public_members{/member}",
                "avatar_url": "https://github.example.net/avatars/u/9?",
                "description": None
            }
        ]

    def get_org(self):
        return {
            "login": "org1",
            "id": 8,
            "node_id": "MDEyOk9yZ2FuaXphdGlvbjg=",
            "url": "https://github.example.net/api/v3/orgs/org1",
            "repos_url": "https://github.example.net/api/v3/orgs/org1/repos",
            "events_url": "https://github.example.net/api/v3/orgs/org1/events",
            "hooks_url": "https://github.example.net/api/v3/orgs/org1/hooks",
            "issues_url": "https://github.example.net/api/v3/orgs/org1/issues",
            "members_url": "https://github.example.net/api/v3/orgs/org1/members{/member}",
            "public_members_url": "https://github.example.net/api/v3/orgs/org1/public_members{/member}",
            "avatar_url": "https://github.example.net/avatars/u/8?",
            "description": None,
            "has_organization_projects": True,
            "has_repository_projects": True,
            "public_repos": 1,
            "public_gists": 0,
            "followers": 0,
            "following": 0,
            "html_url": "https://github.example.net/org1",
            "created_at": "2020-07-16T11:55:11Z",
            "updated_at": "2020-07-16T11:55:11Z",
            "type": "Organization",
            "total_private_repos": 1,
            "owned_private_repos": 2,
            "private_gists": 0,
            "disk_usage": 30001,
            "collaborators": 0,
            "billing_email": None,
            "default_repository_permission": "read",
            "members_can_create_repositories": True,
            "two_factor_requirement_enabled": False,
            "plan": {
                "name": "enterprise",
                "space": 976562499,
                "private_repos": 999999999999,
                "filled_seats": 3,
                "seats": 0
            }
        }

    def get_all_org_repos(self):
        return [
            {
                "id": 5,
                "node_id": "MDEwOlJlcG9zaXRvcnk1",
                "name": "googleapis",
                "full_name": "org1/googleapis",
                "private": False,
                "owner": {
                    "login": "org1",
                    "id": 8,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjg=",
                    "avatar_url": "https://github.example.net/avatars/u/8?",
                    "gravatar_id": "",
                    "url": "https://github.example.net/api/v3/users/org1",
                    "html_url": "https://github.example.net/org1",
                    "followers_url": "https://github.example.net/api/v3/users/org1/followers",
                    "following_url": "https://github.example.net/api/v3/users/org1/following{/other_user}",
                    "gists_url": "https://github.example.net/api/v3/users/org1/gists{/gist_id}",
                    "starred_url": "https://github.example.net/api/v3/users/org1/starred{/owner}{/repo}",
                    "subscriptions_url": "https://github.example.net/api/v3/users/org1/subscriptions",
                    "organizations_url": "https://github.example.net/api/v3/users/org1/orgs",
                    "repos_url": "https://github.example.net/api/v3/users/org1/repos",
                    "events_url": "https://github.example.net/api/v3/users/org1/events{/privacy}",
                    "received_events_url": "https://github.example.net/api/v3/users/org1/received_events",
                    "type": "Organization",
                    "site_admin": False
                },
                "html_url": "https://github.example.net/org1/googleapis",
                "description": None,
                "fork": False,
                "url": "https://github.example.net/api/v3/repos/org1/googleapis",
                "forks_url": "https://github.example.net/api/v3/repos/org1/googleapis/forks",
                "keys_url": "https://github.example.net/api/v3/repos/org1/googleapis/keys{/key_id}",
                "collaborators_url": "https://github.example.net/api/v3/repos/org1/googleapis/collaborators{/collaborator}",
                "teams_url": "https://github.example.net/api/v3/repos/org1/googleapis/teams",
                "hooks_url": "https://github.example.net/api/v3/repos/org1/googleapis/hooks",
                "issue_events_url": "https://github.example.net/api/v3/repos/org1/googleapis/issues/events{/number}",
                "events_url": "https://github.example.net/api/v3/repos/org1/googleapis/events",
                "assignees_url": "https://github.example.net/api/v3/repos/org1/googleapis/assignees{/user}",
                "branches_url": "https://github.example.net/api/v3/repos/org1/googleapis/branches{/branch}",
                "tags_url": "https://github.example.net/api/v3/repos/org1/googleapis/tags",
                "blobs_url": "https://github.example.net/api/v3/repos/org1/googleapis/git/blobs{/sha}",
                "git_tags_url": "https://github.example.net/api/v3/repos/org1/googleapis/git/tags{/sha}",
                "git_refs_url": "https://github.example.net/api/v3/repos/org1/googleapis/git/refs{/sha}",
                "trees_url": "https://github.example.net/api/v3/repos/org1/googleapis/git/trees{/sha}",
                "statuses_url": "https://github.example.net/api/v3/repos/org1/googleapis/statuses/{sha}",
                "languages_url": "https://github.example.net/api/v3/repos/org1/googleapis/languages",
                "stargazers_url": "https://github.example.net/api/v3/repos/org1/googleapis/stargazers",
                "contributors_url": "https://github.example.net/api/v3/repos/org1/googleapis/contributors",
                "subscribers_url": "https://github.example.net/api/v3/repos/org1/googleapis/subscribers",
                "subscription_url": "https://github.example.net/api/v3/repos/org1/googleapis/subscription",
                "commits_url": "https://github.example.net/api/v3/repos/org1/googleapis/commits{/sha}",
                "git_commits_url": "https://github.example.net/api/v3/repos/org1/googleapis/git/commits{/sha}",
                "comments_url": "https://github.example.net/api/v3/repos/org1/googleapis/comments{/number}",
                "issue_comment_url": "https://github.example.net/api/v3/repos/org1/googleapis/issues/comments{/number}",
                "contents_url": "https://github.example.net/api/v3/repos/org1/googleapis/contents/{+path}",
                "compare_url": "https://github.example.net/api/v3/repos/org1/googleapis/compare/{base}...{head}",
                "merges_url": "https://github.example.net/api/v3/repos/org1/googleapis/merges",
                "archive_url": "https://github.example.net/api/v3/repos/org1/googleapis/{archive_format}{/ref}",
                "downloads_url": "https://github.example.net/api/v3/repos/org1/googleapis/downloads",
                "issues_url": "https://github.example.net/api/v3/repos/org1/googleapis/issues{/number}",
                "pulls_url": "https://github.example.net/api/v3/repos/org1/googleapis/pulls{/number}",
                "milestones_url": "https://github.example.net/api/v3/repos/org1/googleapis/milestones{/number}",
                "notifications_url": "https://github.example.net/api/v3/repos/org1/googleapis/notifications{?since,all,participating}",
                "labels_url": "https://github.example.net/api/v3/repos/org1/googleapis/labels{/name}",
                "releases_url": "https://github.example.net/api/v3/repos/org1/googleapis/releases{/id}",
                "deployments_url": "https://github.example.net/api/v3/repos/org1/googleapis/deployments",
                "created_at": "2020-07-16T11:55:29Z",
                "updated_at": "2020-07-16T11:59:16Z",
                "pushed_at": "2020-07-16T11:58:41Z",
                "git_url": "git://github.example.net/org1/googleapis.git",
                "ssh_url": "git@github.example.net:org1/googleapis.git",
                "clone_url": "https://github.example.net/org1/googleapis.git",
                "svn_url": "https://github.example.net/org1/googleapis",
                "homepage": None,
                "size": 11271,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "Starlark",
                "has_issues": True,
                "has_projects": True,
                "has_downloads": True,
                "has_wiki": True,
                "has_pages": False,
                "forks_count": 0,
                "mirror_url": None,
                "archived": False,
                "disabled": False,
                "open_issues_count": 0,
                "license": {
                    "key": "apache-2.0",
                    "name": "Apache License 2.0",
                    "spdx_id": "Apache-2.0",
                    "url": "https://github.example.net/api/v3/licenses/apache-2.0",
                    "node_id": "MDc6TGljZW5zZTI="
                },
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "permissions": {
                    "admin": True,
                    "push": True,
                    "pull": True
                }
            },
            {
                "id": 6,
                "node_id": "MDEwOlJlcG9zaXRvcnk2",
                "name": "gradio",
                "full_name": "org1/gradio",
                "private": True,
                "owner": {
                    "login": "org1",
                    "id": 8,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjg=",
                    "avatar_url": "https://github.example.net/avatars/u/8?",
                    "gravatar_id": "",
                    "url": "https://github.example.net/api/v3/users/org1",
                    "html_url": "https://github.example.net/org1",
                    "followers_url": "https://github.example.net/api/v3/users/org1/followers",
                    "following_url": "https://github.example.net/api/v3/users/org1/following{/other_user}",
                    "gists_url": "https://github.example.net/api/v3/users/org1/gists{/gist_id}",
                    "starred_url": "https://github.example.net/api/v3/users/org1/starred{/owner}{/repo}",
                    "subscriptions_url": "https://github.example.net/api/v3/users/org1/subscriptions",
                    "organizations_url": "https://github.example.net/api/v3/users/org1/orgs",
                    "repos_url": "https://github.example.net/api/v3/users/org1/repos",
                    "events_url": "https://github.example.net/api/v3/users/org1/events{/privacy}",
                    "received_events_url": "https://github.example.net/api/v3/users/org1/received_events",
                    "type": "Organization",
                    "site_admin": False
                },
                "html_url": "https://github.example.net/org1/gradio",
                "description": None,
                "fork": False,
                "url": "https://github.example.net/api/v3/repos/org1/gradio",
                "forks_url": "https://github.example.net/api/v3/repos/org1/gradio/forks",
                "keys_url": "https://github.example.net/api/v3/repos/org1/gradio/keys{/key_id}",
                "collaborators_url": "https://github.example.net/api/v3/repos/org1/gradio/collaborators{/collaborator}",
                "teams_url": "https://github.example.net/api/v3/repos/org1/gradio/teams",
                "hooks_url": "https://github.example.net/api/v3/repos/org1/gradio/hooks",
                "issue_events_url": "https://github.example.net/api/v3/repos/org1/gradio/issues/events{/number}",
                "events_url": "https://github.example.net/api/v3/repos/org1/gradio/events",
                "assignees_url": "https://github.example.net/api/v3/repos/org1/gradio/assignees{/user}",
                "branches_url": "https://github.example.net/api/v3/repos/org1/gradio/branches{/branch}",
                "tags_url": "https://github.example.net/api/v3/repos/org1/gradio/tags",
                "blobs_url": "https://github.example.net/api/v3/repos/org1/gradio/git/blobs{/sha}",
                "git_tags_url": "https://github.example.net/api/v3/repos/org1/gradio/git/tags{/sha}",
                "git_refs_url": "https://github.example.net/api/v3/repos/org1/gradio/git/refs{/sha}",
                "trees_url": "https://github.example.net/api/v3/repos/org1/gradio/git/trees{/sha}",
                "statuses_url": "https://github.example.net/api/v3/repos/org1/gradio/statuses/{sha}",
                "languages_url": "https://github.example.net/api/v3/repos/org1/gradio/languages",
                "stargazers_url": "https://github.example.net/api/v3/repos/org1/gradio/stargazers",
                "contributors_url": "https://github.example.net/api/v3/repos/org1/gradio/contributors",
                "subscribers_url": "https://github.example.net/api/v3/repos/org1/gradio/subscribers",
                "subscription_url": "https://github.example.net/api/v3/repos/org1/gradio/subscription",
                "commits_url": "https://github.example.net/api/v3/repos/org1/gradio/commits{/sha}",
                "git_commits_url": "https://github.example.net/api/v3/repos/org1/gradio/git/commits{/sha}",
                "comments_url": "https://github.example.net/api/v3/repos/org1/gradio/comments{/number}",
                "issue_comment_url": "https://github.example.net/api/v3/repos/org1/gradio/issues/comments{/number}",
                "contents_url": "https://github.example.net/api/v3/repos/org1/gradio/contents/{+path}",
                "compare_url": "https://github.example.net/api/v3/repos/org1/gradio/compare/{base}...{head}",
                "merges_url": "https://github.example.net/api/v3/repos/org1/gradio/merges",
                "archive_url": "https://github.example.net/api/v3/repos/org1/gradio/{archive_format}{/ref}",
                "downloads_url": "https://github.example.net/api/v3/repos/org1/gradio/downloads",
                "issues_url": "https://github.example.net/api/v3/repos/org1/gradio/issues{/number}",
                "pulls_url": "https://github.example.net/api/v3/repos/org1/gradio/pulls{/number}",
                "milestones_url": "https://github.example.net/api/v3/repos/org1/gradio/milestones{/number}",
                "notifications_url": "https://github.example.net/api/v3/repos/org1/gradio/notifications{?since,all,participating}",
                "labels_url": "https://github.example.net/api/v3/repos/org1/gradio/labels{/name}",
                "releases_url": "https://github.example.net/api/v3/repos/org1/gradio/releases{/id}",
                "deployments_url": "https://github.example.net/api/v3/repos/org1/gradio/deployments",
                "created_at": "2020-07-16T12:00:26Z",
                "updated_at": "2020-07-16T12:01:23Z",
                "pushed_at": "2020-07-16T12:01:14Z",
                "git_url": "git://github.example.net/org1/gradio.git",
                "ssh_url": "git@github.example.net:org1/gradio.git",
                "clone_url": "https://github.example.net/org1/gradio.git",
                "svn_url": "https://github.example.net/org1/gradio",
                "homepage": None,
                "size": 18730,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "Python",
                "has_issues": True,
                "has_projects": True,
                "has_downloads": True,
                "has_wiki": True,
                "has_pages": False,
                "forks_count": 0,
                "mirror_url": None,
                "archived": False,
                "disabled": False,
                "open_issues_count": 0,
                "license": {
                    "key": "apache-2.0",
                    "name": "Apache License 2.0",
                    "spdx_id": "Apache-2.0",
                    "url": "https://github.example.net/api/v3/licenses/apache-2.0",
                    "node_id": "MDc6TGljZW5zZTI="
                },
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "permissions": {
                    "admin": True,
                    "push": True,
                    "pull": True
                }
            }
        ]

    def get_all_org_members(self):
        return [
            {
                "login": "bmay",
                "id": 5,
                "node_id": "MDQ6VXNlcjU=",
                "avatar_url": "https://github.example.net/avatars/u/5?",
                "gravatar_id": "",
                "url": "https://github.example.net/api/v3/users/bmay",
                "html_url": "https://github.example.net/bmay",
                "followers_url": "https://github.example.net/api/v3/users/bmay/followers",
                "following_url": "https://github.example.net/api/v3/users/bmay/following{/other_user}",
                "gists_url": "https://github.example.net/api/v3/users/bmay/gists{/gist_id}",
                "starred_url": "https://github.example.net/api/v3/users/bmay/starred{/owner}{/repo}",
                "subscriptions_url": "https://github.example.net/api/v3/users/bmay/subscriptions",
                "organizations_url": "https://github.example.net/api/v3/users/bmay/orgs",
                "repos_url": "https://github.example.net/api/v3/users/bmay/repos",
                "events_url": "https://github.example.net/api/v3/users/bmay/events{/privacy}",
                "received_events_url": "https://github.example.net/api/v3/users/bmay/received_events",
                "type": "User",
                "site_admin": False
            },
            {
                "login": "gitlab",
                "id": 3,
                "node_id": "MDQ6VXNlcjM=",
                "avatar_url": "https://github.example.net/avatars/u/3?",
                "gravatar_id": "",
                "url": "https://github.example.net/api/v3/users/gitlab",
                "html_url": "https://github.example.net/gitlab",
                "followers_url": "https://github.example.net/api/v3/users/gitlab/followers",
                "following_url": "https://github.example.net/api/v3/users/gitlab/following{/other_user}",
                "gists_url": "https://github.example.net/api/v3/users/gitlab/gists{/gist_id}",
                "starred_url": "https://github.example.net/api/v3/users/gitlab/starred{/owner}{/repo}",
                "subscriptions_url": "https://github.example.net/api/v3/users/gitlab/subscriptions",
                "organizations_url": "https://github.example.net/api/v3/users/gitlab/orgs",
                "repos_url": "https://github.example.net/api/v3/users/gitlab/repos",
                "events_url": "https://github.example.net/api/v3/users/gitlab/events{/privacy}",
                "received_events_url": "https://github.example.net/api/v3/users/gitlab/received_events",
                "type": "User",
                "site_admin": True
            },
            {
                "login": "mlindsay",
                "id": 4,
                "node_id": "MDQ6VXNlcjQ=",
                "avatar_url": "https://github.example.net/avatars/u/4?",
                "gravatar_id": "",
                "url": "https://github.example.net/api/v3/users/mlindsay",
                "html_url": "https://github.example.net/mlindsay",
                "followers_url": "https://github.example.net/api/v3/users/mlindsay/followers",
                "following_url": "https://github.example.net/api/v3/users/mlindsay/following{/other_user}",
                "gists_url": "https://github.example.net/api/v3/users/mlindsay/gists{/gist_id}",
                "starred_url": "https://github.example.net/api/v3/users/mlindsay/starred{/owner}{/repo}",
                "subscriptions_url": "https://github.example.net/api/v3/users/mlindsay/subscriptions",
                "organizations_url": "https://github.example.net/api/v3/users/mlindsay/orgs",
                "repos_url": "https://github.example.net/api/v3/users/mlindsay/repos",
                "events_url": "https://github.example.net/api/v3/users/mlindsay/events{/privacy}",
                "received_events_url": "https://github.example.net/api/v3/users/mlindsay/received_events",
                "type": "User",
                "site_admin": True
            },
            {
                "login": "nperic",
                "id": 7,
                "node_id": "MDQ6VXNlcjc=",
                "avatar_url": "https://github.example.net/avatars/u/7?",
                "gravatar_id": "",
                "url": "https://github.example.net/api/v3/users/nperic",
                "html_url": "https://github.example.net/nperic",
                "followers_url": "https://github.example.net/api/v3/users/nperic/followers",
                "following_url": "https://github.example.net/api/v3/users/nperic/following{/other_user}",
                "gists_url": "https://github.example.net/api/v3/users/nperic/gists{/gist_id}",
                "starred_url": "https://github.example.net/api/v3/users/nperic/starred{/owner}{/repo}",
                "subscriptions_url": "https://github.example.net/api/v3/users/nperic/subscriptions",
                "organizations_url": "https://github.example.net/api/v3/users/nperic/orgs",
                "repos_url": "https://github.example.net/api/v3/users/nperic/repos",
                "events_url": "https://github.example.net/api/v3/users/nperic/events{/privacy}",
                "received_events_url": "https://github.example.net/api/v3/users/nperic/received_events",
                "type": "User",
                "site_admin": True
            }
        ]

    def get_all_org_teams(self):
        return [
            {
                "name": "qa",
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "slug": "qa",
                "description": "",
                "privacy": "closed",
                "url": "https://github.example.net/api/v3/organizations/9/team/1",
                "html_url": "https://github.example.net/orgs/org2/teams/qa",
                "members_url": "https://github.example.net/api/v3/organizations/9/team/1/members{/member}",
                "repositories_url": "https://github.example.net/api/v3/organizations/9/team/1/repos",
                "permission": "pull",
                "parent": None
            },
            {
                "name": "qa-child",
                "id": 2,
                "node_id": "MDQ6VGVhbTI=",
                "slug": "qa-child",
                "description": "Child team of team qa",
                "privacy": "closed",
                "url": "https://github.example.net/api/v3/organizations/9/team/2",
                "html_url": "https://github.example.net/orgs/org2/teams/qa-child",
                "members_url": "https://github.example.net/api/v3/organizations/9/team/2/members{/member}",
                "repositories_url": "https://github.example.net/api/v3/organizations/9/team/2/repos",
                "permission": "pull",
                "parent": {
                    "name": "qa",
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "slug": "qa",
                    "description": "",
                    "privacy": "closed",
                    "url": "https://github.example.net/api/v3/organizations/9/team/1",
                    "html_url": "https://github.example.net/orgs/org2/teams/qa",
                    "members_url": "https://github.example.net/api/v3/organizations/9/team/1/members{/member}",
                    "repositories_url": "https://github.example.net/api/v3/organizations/9/team/1/repos",
                    "permission": "pull"
                }
            },
            {
                "name": "qa-grandchild",
                "id": 3,
                "node_id": "MDQ6VGVhbTM=",
                "slug": "qa-grandchild",
                "description": "",
                "privacy": "closed",
                "url": "https://github.example.net/api/v3/organizations/9/team/3",
                "html_url": "https://github.example.net/orgs/org2/teams/qa-grandchild",
                "members_url": "https://github.example.net/api/v3/organizations/9/team/3/members{/member}",
                "repositories_url": "https://github.example.net/api/v3/organizations/9/team/3/repos",
                "permission": "pull",
                "parent": {
                    "name": "qa-child",
                    "id": 2,
                    "node_id": "MDQ6VGVhbTI=",
                    "slug": "qa-child",
                    "description": "Child team of team qa",
                    "privacy": "closed",
                    "url": "https://github.example.net/api/v3/organizations/9/team/2",
                    "html_url": "https://github.example.net/orgs/org2/teams/qa-child",
                    "members_url": "https://github.example.net/api/v3/organizations/9/team/2/members{/member}",
                    "repositories_url": "https://github.example.net/api/v3/organizations/9/team/2/repos",
                    "permission": "pull"
                }
            }
        ]

    def get_org_team(self):
        return {
            "name": "qa",
            "id": 1,
            "node_id": "MDQ6VGVhbTE=",
            "slug": "qa",
            "description": "",
            "privacy": "closed",
            "url": "https://github.example.net/api/v3/organizations/9/team/1",
            "html_url": "https://github.example.net/orgs/org2/teams/qa",
            "members_url": "https://github.example.net/api/v3/organizations/9/team/1/members{/member}",
            "repositories_url": "https://github.example.net/api/v3/organizations/9/team/1/repos",
            "permission": "pull",
            "created_at": "2020-07-17T21:03:22Z",
            "updated_at": "2020-07-17T21:03:22Z",
            "members_count": 3,
            "repos_count": 2,
            "organization": {
                "login": "org2",
                "id": 9,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjk=",
                "url": "https://github.example.net/api/v3/orgs/org2",
                "repos_url": "https://github.example.net/api/v3/orgs/org2/repos",
                "events_url": "https://github.example.net/api/v3/orgs/org2/events",
                "hooks_url": "https://github.example.net/api/v3/orgs/org2/hooks",
                "issues_url": "https://github.example.net/api/v3/orgs/org2/issues",
                "members_url": "https://github.example.net/api/v3/orgs/org2/members{/member}",
                "public_members_url": "https://github.example.net/api/v3/orgs/org2/public_members{/member}",
                "avatar_url": "https://github.example.net/avatars/u/9?",
                "description": None,
                "has_organization_projects": True,
                "has_repository_projects": True,
                "public_repos": 1,
                "public_gists": 0,
                "followers": 0,
                "following": 0,
                "html_url": "https://github.example.net/org2",
                "created_at": "2020-07-16T12:04:56Z",
                "updated_at": "2020-07-16T12:04:56Z",
                "type": "Organization"
            },
            "parent": None
        }

    def get_org_child_team(self):
        return {
            "name": "qa-child",
            "id": 2,
            "node_id": "MDQ6VGVhbTI=",
            "slug": "qa-child",
            "description": "Child team of team qa",
            "privacy": "closed",
            "url": "https://github.example.net/api/v3/organizations/9/team/2",
            "html_url": "https://github.example.net/orgs/org2/teams/qa-child",
            "members_url": "https://github.example.net/api/v3/organizations/9/team/2/members{/member}",
            "repositories_url": "https://github.example.net/api/v3/organizations/9/team/2/repos",
            "permission": "pull",
            "created_at": "2020-07-23T09:48:23Z",
            "updated_at": "2020-07-23T09:48:23Z",
            "members_count": 1,
            "repos_count": 2,
            "organization": {
                "login": "org2",
                "id": 9,
                "node_id": "MDEyOk9yZ2FuaXphdGlvbjk=",
                "url": "https://github.example.net/api/v3/orgs/org2",
                "repos_url": "https://github.example.net/api/v3/orgs/org2/repos",
                "events_url": "https://github.example.net/api/v3/orgs/org2/events",
                "hooks_url": "https://github.example.net/api/v3/orgs/org2/hooks",
                "issues_url": "https://github.example.net/api/v3/orgs/org2/issues",
                "members_url": "https://github.example.net/api/v3/orgs/org2/members{/member}",
                "public_members_url": "https://github.example.net/api/v3/orgs/org2/public_members{/member}",
                "avatar_url": "https://github.example.net/avatars/u/9?",
                "description": None,
                "has_organization_projects": True,
                "has_repository_projects": True,
                "public_repos": 1,
                "public_gists": 0,
                "followers": 0,
                "following": 0,
                "html_url": "https://github.example.net/org2",
                "created_at": "2020-07-16T12:04:56Z",
                "updated_at": "2020-07-16T12:04:56Z",
                "type": "Organization"
            },
            "parent": {
                "name": "qa",
                "id": 1,
                "node_id": "MDQ6VGVhbTE=",
                "slug": "qa",
                "description": "",
                "privacy": "closed",
                "url": "https://github.example.net/api/v3/organizations/9/team/1",
                "html_url": "https://github.example.net/orgs/org2/teams/qa",
                "members_url": "https://github.example.net/api/v3/organizations/9/team/1/members{/member}",
                "repositories_url": "https://github.example.net/api/v3/organizations/9/team/1/repos",
                "permission": "pull"
            }
        }

    def get_all_org_team_repos(self):
        return [
            {
                "id": 8,
                "node_id": "MDEwOlJlcG9zaXRvcnk4",
                "name": "arrow",
                "full_name": "org2/arrow",
                "private": False,
                "owner": {
                    "login": "org2",
                    "id": 9,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjk=",
                    "avatar_url": "https://github.example.net/avatars/u/9?",
                    "gravatar_id": "",
                    "url": "https://github.example.net/api/v3/users/org2",
                    "html_url": "https://github.example.net/org2",
                    "followers_url": "https://github.example.net/api/v3/users/org2/followers",
                    "following_url": "https://github.example.net/api/v3/users/org2/following{/other_user}",
                    "gists_url": "https://github.example.net/api/v3/users/org2/gists{/gist_id}",
                    "starred_url": "https://github.example.net/api/v3/users/org2/starred{/owner}{/repo}",
                    "subscriptions_url": "https://github.example.net/api/v3/users/org2/subscriptions",
                    "organizations_url": "https://github.example.net/api/v3/users/org2/orgs",
                    "repos_url": "https://github.example.net/api/v3/users/org2/repos",
                    "events_url": "https://github.example.net/api/v3/users/org2/events{/privacy}",
                    "received_events_url": "https://github.example.net/api/v3/users/org2/received_events",
                    "type": "Organization",
                    "site_admin": False
                },
                "html_url": "https://github.example.net/org2/arrow",
                "description": None,
                "fork": False,
                "url": "https://github.example.net/api/v3/repos/org2/arrow",
                "forks_url": "https://github.example.net/api/v3/repos/org2/arrow/forks",
                "keys_url": "https://github.example.net/api/v3/repos/org2/arrow/keys{/key_id}",
                "collaborators_url": "https://github.example.net/api/v3/repos/org2/arrow/collaborators{/collaborator}",
                "teams_url": "https://github.example.net/api/v3/repos/org2/arrow/teams",
                "hooks_url": "https://github.example.net/api/v3/repos/org2/arrow/hooks",
                "issue_events_url": "https://github.example.net/api/v3/repos/org2/arrow/issues/events{/number}",
                "events_url": "https://github.example.net/api/v3/repos/org2/arrow/events",
                "assignees_url": "https://github.example.net/api/v3/repos/org2/arrow/assignees{/user}",
                "branches_url": "https://github.example.net/api/v3/repos/org2/arrow/branches{/branch}",
                "tags_url": "https://github.example.net/api/v3/repos/org2/arrow/tags",
                "blobs_url": "https://github.example.net/api/v3/repos/org2/arrow/git/blobs{/sha}",
                "git_tags_url": "https://github.example.net/api/v3/repos/org2/arrow/git/tags{/sha}",
                "git_refs_url": "https://github.example.net/api/v3/repos/org2/arrow/git/refs{/sha}",
                "trees_url": "https://github.example.net/api/v3/repos/org2/arrow/git/trees{/sha}",
                "statuses_url": "https://github.example.net/api/v3/repos/org2/arrow/statuses/{sha}",
                "languages_url": "https://github.example.net/api/v3/repos/org2/arrow/languages",
                "stargazers_url": "https://github.example.net/api/v3/repos/org2/arrow/stargazers",
                "contributors_url": "https://github.example.net/api/v3/repos/org2/arrow/contributors",
                "subscribers_url": "https://github.example.net/api/v3/repos/org2/arrow/subscribers",
                "subscription_url": "https://github.example.net/api/v3/repos/org2/arrow/subscription",
                "commits_url": "https://github.example.net/api/v3/repos/org2/arrow/commits{/sha}",
                "git_commits_url": "https://github.example.net/api/v3/repos/org2/arrow/git/commits{/sha}",
                "comments_url": "https://github.example.net/api/v3/repos/org2/arrow/comments{/number}",
                "issue_comment_url": "https://github.example.net/api/v3/repos/org2/arrow/issues/comments{/number}",
                "contents_url": "https://github.example.net/api/v3/repos/org2/arrow/contents/{+path}",
                "compare_url": "https://github.example.net/api/v3/repos/org2/arrow/compare/{base}...{head}",
                "merges_url": "https://github.example.net/api/v3/repos/org2/arrow/merges",
                "archive_url": "https://github.example.net/api/v3/repos/org2/arrow/{archive_format}{/ref}",
                "downloads_url": "https://github.example.net/api/v3/repos/org2/arrow/downloads",
                "issues_url": "https://github.example.net/api/v3/repos/org2/arrow/issues{/number}",
                "pulls_url": "https://github.example.net/api/v3/repos/org2/arrow/pulls{/number}",
                "milestones_url": "https://github.example.net/api/v3/repos/org2/arrow/milestones{/number}",
                "notifications_url": "https://github.example.net/api/v3/repos/org2/arrow/notifications{?since,all,participating}",
                "labels_url": "https://github.example.net/api/v3/repos/org2/arrow/labels{/name}",
                "releases_url": "https://github.example.net/api/v3/repos/org2/arrow/releases{/id}",
                "deployments_url": "https://github.example.net/api/v3/repos/org2/arrow/deployments",
                "created_at": "2020-07-16T12:07:41Z",
                "updated_at": "2020-07-16T12:09:26Z",
                "pushed_at": "2020-07-16T12:08:34Z",
                "git_url": "git://github.example.net/org2/arrow.git",
                "ssh_url": "git@github.example.net:org2/arrow.git",
                "clone_url": "https://github.example.net/org2/arrow.git",
                "svn_url": "https://github.example.net/org2/arrow",
                "homepage": None,
                "size": 58418,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "C++",
                "has_issues": True,
                "has_projects": True,
                "has_downloads": True,
                "has_wiki": True,
                "has_pages": False,
                "forks_count": 0,
                "mirror_url": None,
                "archived": False,
                "disabled": False,
                "open_issues_count": 0,
                "license": {
                    "key": "apache-2.0",
                    "name": "Apache License 2.0",
                    "spdx_id": "Apache-2.0",
                    "url": "https://github.example.net/api/v3/licenses/apache-2.0",
                    "node_id": "MDc6TGljZW5zZTI="
                },
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "permissions": {
                    "pull": True,
                    "triage": False,
                    "push": False,
                    "maintain": False,
                    "admin": False
                }
            },
            {
                "id": 9,
                "node_id": "MDEwOlJlcG9zaXRvcnk5",
                "name": "phaser",
                "full_name": "org2/phaser",
                "private": True,
                "owner": {
                    "login": "org2",
                    "id": 9,
                    "node_id": "MDEyOk9yZ2FuaXphdGlvbjk=",
                    "avatar_url": "https://github.example.net/avatars/u/9?",
                    "gravatar_id": "",
                    "url": "https://github.example.net/api/v3/users/org2",
                    "html_url": "https://github.example.net/org2",
                    "followers_url": "https://github.example.net/api/v3/users/org2/followers",
                    "following_url": "https://github.example.net/api/v3/users/org2/following{/other_user}",
                    "gists_url": "https://github.example.net/api/v3/users/org2/gists{/gist_id}",
                    "starred_url": "https://github.example.net/api/v3/users/org2/starred{/owner}{/repo}",
                    "subscriptions_url": "https://github.example.net/api/v3/users/org2/subscriptions",
                    "organizations_url": "https://github.example.net/api/v3/users/org2/orgs",
                    "repos_url": "https://github.example.net/api/v3/users/org2/repos",
                    "events_url": "https://github.example.net/api/v3/users/org2/events{/privacy}",
                    "received_events_url": "https://github.example.net/api/v3/users/org2/received_events",
                    "type": "Organization",
                    "site_admin": False
                },
                "html_url": "https://github.example.net/org2/phaser",
                "description": None,
                "fork": False,
                "url": "https://github.example.net/api/v3/repos/org2/phaser",
                "forks_url": "https://github.example.net/api/v3/repos/org2/phaser/forks",
                "keys_url": "https://github.example.net/api/v3/repos/org2/phaser/keys{/key_id}",
                "collaborators_url": "https://github.example.net/api/v3/repos/org2/phaser/collaborators{/collaborator}",
                "teams_url": "https://github.example.net/api/v3/repos/org2/phaser/teams",
                "hooks_url": "https://github.example.net/api/v3/repos/org2/phaser/hooks",
                "issue_events_url": "https://github.example.net/api/v3/repos/org2/phaser/issues/events{/number}",
                "events_url": "https://github.example.net/api/v3/repos/org2/phaser/events",
                "assignees_url": "https://github.example.net/api/v3/repos/org2/phaser/assignees{/user}",
                "branches_url": "https://github.example.net/api/v3/repos/org2/phaser/branches{/branch}",
                "tags_url": "https://github.example.net/api/v3/repos/org2/phaser/tags",
                "blobs_url": "https://github.example.net/api/v3/repos/org2/phaser/git/blobs{/sha}",
                "git_tags_url": "https://github.example.net/api/v3/repos/org2/phaser/git/tags{/sha}",
                "git_refs_url": "https://github.example.net/api/v3/repos/org2/phaser/git/refs{/sha}",
                "trees_url": "https://github.example.net/api/v3/repos/org2/phaser/git/trees{/sha}",
                "statuses_url": "https://github.example.net/api/v3/repos/org2/phaser/statuses/{sha}",
                "languages_url": "https://github.example.net/api/v3/repos/org2/phaser/languages",
                "stargazers_url": "https://github.example.net/api/v3/repos/org2/phaser/stargazers",
                "contributors_url": "https://github.example.net/api/v3/repos/org2/phaser/contributors",
                "subscribers_url": "https://github.example.net/api/v3/repos/org2/phaser/subscribers",
                "subscription_url": "https://github.example.net/api/v3/repos/org2/phaser/subscription",
                "commits_url": "https://github.example.net/api/v3/repos/org2/phaser/commits{/sha}",
                "git_commits_url": "https://github.example.net/api/v3/repos/org2/phaser/git/commits{/sha}",
                "comments_url": "https://github.example.net/api/v3/repos/org2/phaser/comments{/number}",
                "issue_comment_url": "https://github.example.net/api/v3/repos/org2/phaser/issues/comments{/number}",
                "contents_url": "https://github.example.net/api/v3/repos/org2/phaser/contents/{+path}",
                "compare_url": "https://github.example.net/api/v3/repos/org2/phaser/compare/{base}...{head}",
                "merges_url": "https://github.example.net/api/v3/repos/org2/phaser/merges",
                "archive_url": "https://github.example.net/api/v3/repos/org2/phaser/{archive_format}{/ref}",
                "downloads_url": "https://github.example.net/api/v3/repos/org2/phaser/downloads",
                "issues_url": "https://github.example.net/api/v3/repos/org2/phaser/issues{/number}",
                "pulls_url": "https://github.example.net/api/v3/repos/org2/phaser/pulls{/number}",
                "milestones_url": "https://github.example.net/api/v3/repos/org2/phaser/milestones{/number}",
                "notifications_url": "https://github.example.net/api/v3/repos/org2/phaser/notifications{?since,all,participating}",
                "labels_url": "https://github.example.net/api/v3/repos/org2/phaser/labels{/name}",
                "releases_url": "https://github.example.net/api/v3/repos/org2/phaser/releases{/id}",
                "deployments_url": "https://github.example.net/api/v3/repos/org2/phaser/deployments",
                "created_at": "2020-07-16T12:11:59Z",
                "updated_at": "2020-07-16T12:13:37Z",
                "pushed_at": "2020-07-16T12:13:06Z",
                "git_url": "git://github.example.net/org2/phaser.git",
                "ssh_url": "git@github.example.net:org2/phaser.git",
                "clone_url": "https://github.example.net/org2/phaser.git",
                "svn_url": "https://github.example.net/org2/phaser",
                "homepage": None,
                "size": 297657,
                "stargazers_count": 0,
                "watchers_count": 0,
                "language": "JavaScript",
                "has_issues": True,
                "has_projects": True,
                "has_downloads": True,
                "has_wiki": True,
                "has_pages": False,
                "forks_count": 0,
                "mirror_url": None,
                "archived": False,
                "disabled": False,
                "open_issues_count": 0,
                "license": {
                    "key": "mit",
                    "name": "MIT License",
                    "spdx_id": "MIT",
                    "url": "https://github.example.net/api/v3/licenses/mit",
                    "node_id": "MDc6TGljZW5zZTEz"
                },
                "forks": 0,
                "open_issues": 0,
                "watchers": 0,
                "default_branch": "master",
                "permissions": {
                    "pull": True,
                    "triage": False,
                    "push": False,
                    "maintain": False,
                    "admin": False
                }
            }
        ]

    def get_all_org_team_members(self):
        return [
            {
                "login": "gitlab",
                "id": 3,
                "node_id": "MDQ6VXNlcjM=",
                "avatar_url": "https://github.example.net/avatars/u/3?",
                "gravatar_id": "",
                "url": "https://github.example.net/api/v3/users/gitlab",
                "html_url": "https://github.example.net/gitlab",
                "followers_url": "https://github.example.net/api/v3/users/gitlab/followers",
                "following_url": "https://github.example.net/api/v3/users/gitlab/following{/other_user}",
                "gists_url": "https://github.example.net/api/v3/users/gitlab/gists{/gist_id}",
                "starred_url": "https://github.example.net/api/v3/users/gitlab/starred{/owner}{/repo}",
                "subscriptions_url": "https://github.example.net/api/v3/users/gitlab/subscriptions",
                "organizations_url": "https://github.example.net/api/v3/users/gitlab/orgs",
                "repos_url": "https://github.example.net/api/v3/users/gitlab/repos",
                "events_url": "https://github.example.net/api/v3/users/gitlab/events{/privacy}",
                "received_events_url": "https://github.example.net/api/v3/users/gitlab/received_events",
                "type": "User",
                "site_admin": True
            },
            {
                "login": "pprokic",
                "id": 6,
                "node_id": "MDQ6VXNlcjY=",
                "avatar_url": "https://github.example.net/avatars/u/6?",
                "gravatar_id": "",
                "url": "https://github.example.net/api/v3/users/pprokic",
                "html_url": "https://github.example.net/pprokic",
                "followers_url": "https://github.example.net/api/v3/users/pprokic/followers",
                "following_url": "https://github.example.net/api/v3/users/pprokic/following{/other_user}",
                "gists_url": "https://github.example.net/api/v3/users/pprokic/gists{/gist_id}",
                "starred_url": "https://github.example.net/api/v3/users/pprokic/starred{/owner}{/repo}",
                "subscriptions_url": "https://github.example.net/api/v3/users/pprokic/subscriptions",
                "organizations_url": "https://github.example.net/api/v3/users/pprokic/orgs",
                "repos_url": "https://github.example.net/api/v3/users/pprokic/repos",
                "events_url": "https://github.example.net/api/v3/users/pprokic/events{/privacy}",
                "received_events_url": "https://github.example.net/api/v3/users/pprokic/received_events",
                "type": "User",
                "site_admin": False
            }
        ]

    def get_all_org_child_teams(self):
        return [
            {
                "name": "qa-child",
                "id": 2,
                "node_id": "MDQ6VGVhbTI=",
                "slug": "qa-child",
                "description": "Child team of team qa",
                "privacy": "closed",
                "url": "https://github.example.net/api/v3/organizations/9/team/2",
                "html_url": "https://github.example.net/orgs/org2/teams/qa-child",
                "members_url": "https://github.example.net/api/v3/organizations/9/team/2/members{/member}",
                "repositories_url": "https://github.example.net/api/v3/organizations/9/team/2/repos",
                "permission": "pull",
                "parent": {
                    "name": "qa",
                    "id": 1,
                    "node_id": "MDQ6VGVhbTE=",
                    "slug": "qa",
                    "description": "",
                    "privacy": "closed",
                    "url": "https://github.example.net/api/v3/organizations/9/team/1",
                    "html_url": "https://github.example.net/orgs/org2/teams/qa",
                    "members_url": "https://github.example.net/api/v3/organizations/9/team/1/members{/member}",
                    "repositories_url": "https://github.example.net/api/v3/organizations/9/team/1/repos",
                    "permission": "pull"
                }
            }
        ]
